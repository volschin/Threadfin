name: Threadfin Build
on:
  push:
    branches:
      - main
      - dev
    tags: "v1.*"
  pull_request_target:
    branches: ["main"]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
  
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write # needed for signing the images with GitHub OIDC Token

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up and Build
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
        id: go
      - name: Build Binaries
        run: |
         go version && go mod tidy && go mod vendor
         echo "Building Linux"
         env GOOS=linux GOARCH=arm64 go build -o dist/Threadfin_linux_arm64
         env GOOS=linux GOARCH=amd64 go build -o dist/Threadfin_linux_amd64
         echo "Building FreeBSD"
         env GOOS=freebsd GOARCH=amd64 go build -o dist/Threadfin_freebsd_amd64
         env GOOS=freebsd GOARCH=arm go build -o dist/Threadfin_freebsd_arm
         echo "Building Macos"
         env GOOS=darwin GOARCH=arm64 go build -o dist/Threadfin_darwin_arm64
         env GOOS=darwin GOARCH=amd64 go build -o dist/Threadfin_darwin_amd64
         echo "Building Windows"
         env GOOS=windows GOARCH=amd64 go build -o dist/Threadfin_windows_amd64.exe

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.4.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=long
            type=edge
#            type=schedule,pattern={{date 'YYYY-MM-DD'}}

      - name: Build and Push container images
        uses: docker/build-push-action@v5
        id: build-and-push
        with:
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
  
      - name: Sign the images with GitHub OIDC Token
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.docker_meta.outputs.tags }}
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes ${images}
   
#      - name: Release
#        uses: "marvinpinto/action-automatic-releases@latest"
#        with:
#          repo_token: "${{ secrets.GITHUB_TOKEN }}"
#          prerelease: false
#          files: dist/*
